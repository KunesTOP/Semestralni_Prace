@{
    ViewData["Title"] = "Database Viewer";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <style>
        body {
            background-color: Azure;
            font-family: Arial, sans-serif;
            padding: 20px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        th, td {
            border: 1px solid #dddddd;
            text-align: left;
            padding: 8px;
        }

        th {
            background-color: #f2f2f2;
        }

        select, button {
            margin-top: 20px;
        }

        /* Context menu styles */
        .context-menu {
            display: none;
            position: absolute;
            background-color: #fff;
            border: 1px solid #ddd;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            z-index: 1000;
        }

        .context-menu-item {
            padding: 8px;
            cursor: pointer;
        }

            .context-menu-item:hover {
                background-color: #f2f2f2;
            }
    </style>
</head>
<body>
    <h2>@ViewData["Title"]</h2>

    <label for="tableName">Vyberte výpis:</label>
    <select id="tableName">
        @foreach (var tableName in ViewBag.TableNames)
        {
            <option value="@tableName">@tableName</option>
        }

    </select>

    <button id="btnLoadTable">Load Table</button>

    <table id="data-table">
        <!-- Table content will be dynamically generated here -->
    </table>

    <!-- Context menu for right-click actions -->
    <div id="context-menu" class="context-menu">
        <div class="context-menu-item" onclick="editRow()">Edit Row</div>
        <div class="context-menu-item" onclick="deleteRow()">Delete Row</div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script>
        const select = document.getElementById("tableName");
        const urlParams = new URLSearchParams(window.location.search);

        if (urlParams.get("selected")) {
            select.value = urlParams.get("selected");
            loadTable();
        }

        select.addEventListener("change", function () {
            urlParams.set("selected", select.value);
            history.pushState({}, null, "?" + urlParams.toString());
        })

        $(document).ready(function () {
            // Attach context menu to the data table
            $('#data-table').on('contextmenu', 'tr', function (e) {
                e.preventDefault();
                showContextMenu(e.pageX, e.pageY);
            });

            // Hide context menu on document click
            $(document).on('click', function () {
                hideContextMenu();
            });

            // Load table on button click
            $('#btnLoadTable').on('click', function () {
                loadTable();
            });
        });

        function loadTable() {
            console.log('HEJ FUNGUJU');
            var tableName = $('#tableName').val();

            // Make an AJAX request to the LoadTable action in HomeController
            $.ajax({
                url: `/Home/LoadTable?tableName=${tableName}`,
                type: 'GET',
                success: function (data) {
                    //TODO tady je někde chyba a musím to vyřešit
                    // Handle the data returned from the server
                    // For demonstration purposes, updating the table body with the data
                    var tableBody = $('#data-table');
                    console.log(tableBody)
                    tableBody.empty();
                    data.data[0].forEach((row) => {
                        var newRow = "<tr id='" + row.id + "'>";
                        for (const [key, value] of Object.entries(row)) {
                            if (!key.toLowerCase().includes("id")) {
                                newRow += "<td data-name='" + key + "' ondblclick='replaceCell(this)'>" + (value || "") + "</td>";
                            }
                        }
                        newRow += "<td><button onclick='saveEditedRow(" + row.id + ")'>Uložit změny</button><button class='btn-delete' onclick='deleteRow(" + row.id + ")'>Smazat</button></td></tr>";
                        tableBody.append(newRow);
                    });
                    var newRow = "<tr id='-1'>";
                    var row = data.data[0][0];
                    for (const [key, value] of Object.entries(row)) {
                        if (!key.toLowerCase().includes("id")) {
                            newRow += "<td data-name='" + key + "' ondblclick='replaceCell(this)'></td>";
                        }
                    }
                    newRow += "<td><button class='btn-add' onclick='addRow()'>Přidat</button></td></tr>";
                    tableBody.append(newRow);
                },
                error: function (error) {
                    console.error(error);
                }
            });
        }
        function addRow() {
            saveEditedRow(-1);
            window.location.reload();
        }

        function showContextMenu(x, y) {
            $('#context-menu').css({
                display: 'block',
                left: x,
                top: y
            });
        }

        function hideContextMenu() {
            $('#context-menu').css('display', 'none');
        }
        function deleteRow(rowId) {
            var selectedValue = document.getElementById("tableName").value;
            console.log(selectedValue);
            console.log(JSON.stringify({ selectedValue: selectedValue, rowId: rowId }));
            fetch('@Url.Action("DeleteRow", "Home")', {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ selectedValue: selectedValue, rowId:rowId }),
            })
                .then(response => {
                    if (response.ok) {
                        
                        // Handle success
                        // You may not need to do anything if the response doesn't contain a body
                    } else {
                        // Handle error
                    }
                })
                .catch(error => {
                    console.log("Jejda, něco se stalo při odstraňování prvku!");
                });
            document.getElementById(rowId).remove();

        }

        function saveEditedRow(rowId) {
            const row = document.getElementById(rowId);
            const entries = {};
            var selectedValue = document.getElementById("tableName").value;
            [...row.children].forEach((child) => {
                if (child.dataset.name) {
                    entries[child.dataset.name] = child.innerText || null;
                }
            })
            console.log(entries);
            fetch('@Url.Action("SaveEditedRow", "Home")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    selectedValue: selectedValue,
                    rowId: rowId,
                    entries: entries
                })
            })
                .then(response => {
                    if (response.ok) {
                        // Handle success
                        // You may not need to do anything if the response doesn't contain a body
                    } else {
                        console.log("Hupsík dupsík, něco se pokazilo při funkci saveEditedRow! toto obsahuje ukládaný řádek: ");
                        console.log(row);
                    }
                })
            /* update záznamu v databázi, něco ve stylu UPDATE tabulka SET $(entries[i][0]) = $(entries[i][1]) WHERE id = $(rowId) */
        }
        function replaceCell(cell) {
            console.log("JSEM V REPLACECELL")
            cell.innerHTML = "<input type='text' value='" + cell.innerText + "' onfocusout='turnBack(this)'>";
            console.log(cell.innerHTML)
        }

        function turnBack(input) {
            input.replaceWith(input.value);
        }

    </script>
</body>
</html>
